{"errors":[],"warnings":[],"version":"4.43.0","hash":"27b74cd3352ec8188a08","time":737,"builtAt":1594640951824,"publicPath":"","outputPath":"D:\\Coding\\Git\\CSSPlayground","assetsByChunkName":{"scripts":"scripts.js"},"assets":[{"name":"scripts.js","size":2025,"chunks":[0],"chunkNames":["scripts"],"info":{},"emitted":true}],"filteredAssets":0,"entrypoints":{"scripts":{"chunks":[0],"assets":["scripts.js"],"children":{},"childAssets":{}}},"namedChunkGroups":{"scripts":{"chunks":[0],"assets":["scripts.js"],"children":{},"childAssets":{}}},"chunks":[{"id":0,"rendered":true,"initial":true,"entry":true,"size":2483,"names":["scripts"],"files":["scripts.js"],"hash":"f27e07d54140cb8cf05a","siblings":[],"parents":[],"children":[],"childrenByOrder":{},"modules":[{"id":0,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js d413a0f81e20b012cde400dc601ed7fd","name":"./build/assets/src/scripts/scripts.js + 3 modules","index":0,"index2":3,"size":2483,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"issuer":null,"issuerId":null,"issuerName":null,"issuerPath":null,"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":null,"module":null,"moduleName":null,"type":"single entry","userRequest":"./build/assets/src/scripts/scripts.js","loc":"scripts"}],"usedExports":true,"providedExports":[],"optimizationBailout":[],"depth":0,"modules":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js","index":0,"index2":3,"size":1500,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":null,"issuerId":null,"issuerName":null,"issuerPath":null,"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":null,"module":null,"moduleName":null,"type":"single entry","userRequest":"./build/assets/src/scripts/scripts.js","loc":"scripts"}],"usedExports":true,"providedExports":[],"optimizationBailout":["ModuleConcatenation bailout: Module is an entry point"],"depth":0,"source":"// Import basic module\nimport { add } from './modules/Math/add.mjs';\nimport { multiply } from './modules/Math/multiply.mjs';\nconsole.log(multiply(6, 4));\nconsole.log(add(5, 4, 3, 8));\nimport { MathAdd, Calc } from './modules/Math/math.mjs';\nconsole.log(MathAdd(3, 4));\nvar myCalc1 = new Calc(3);\nmyCalc1.add(5);\nconsole.log(myCalc1.equals());\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  document.querySelector(\"[data-js-theme-switch]\").onchange = themeSwitch;\n  document.querySelector(\"[data-js-slider-weight]\").oninput = rangeSliderWeight;\n  document.querySelector(\"[data-js-slider-italic]\").oninput = rangeSliderItalic;\n});\nvar bodyThemeClass = \"theme--dark\";\nvar fontVariationWeight = 300;\nvar fontVariationItalic = 0;\n\nfunction themeSwitch(event) {\n  if (event.target.checked) {\n    document.querySelector(\"body\").classList.add(\"theme--dark\");\n  } else {\n    document.querySelector(\"body\").classList.remove(\"theme--dark\");\n  }\n} // Range slider \n\n\nfunction rangeSliderWeight(event) {\n  fontVariationWeight = event.target.value;\n  setFontVariationSettings();\n}\n\nfunction rangeSliderItalic(event) {\n  fontVariationItalic = event.target.value;\n  setFontVariationSettings();\n}\n\nfunction setFontVariationSettings() {\n  var contentWrapper = document.querySelector(\"[data-js-content-wrapper]\");\n  contentWrapper.style.fontVariationSettings = \"'wght' \" + fontVariationWeight + \", 'ital' \" + fontVariationItalic;\n}\n/*\r\n    Idea for modules:\r\n    HSLA Colour picker\r\n\r\n    Math \r\n\r\n\r\n\r\n*/"},{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\modules\\Math\\add.mjs","name":"./build/assets/src/scripts/modules/Math/add.mjs","index":1,"index2":0,"size":357,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","issuerId":null,"issuerName":"./build/assets/src/scripts/scripts.js","issuerPath":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js"}],"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony side effect evaluation","userRequest":"./modules/Math/add.mjs","loc":"2:0-45"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/add.mjs","loc":"5:12-15"}],"usedExports":["add"],"providedExports":["add"],"optimizationBailout":[],"depth":1,"source":"const reducer = (accumulator, currentValue) => accumulator + currentValue; // This is the function done with the .reduce method on the array\r\n\r\n// Basic Maths module\r\nexport function add() {\r\n    // console.log(arguments);\r\n    var arr = Array.prototype.slice.call(arguments);\r\n    return arr.reduce(reducer, 5); // The 5 here is the initial value used\r\n}\r\n"},{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\modules\\Math\\multiply.mjs","name":"./build/assets/src/scripts/modules/Math/multiply.mjs","index":2,"index2":1,"size":245,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","issuerId":null,"issuerName":"./build/assets/src/scripts/scripts.js","issuerPath":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js"}],"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony side effect evaluation","userRequest":"./modules/Math/multiply.mjs","loc":"3:0-55"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/multiply.mjs","loc":"4:12-20"}],"usedExports":["multiply"],"providedExports":["multiply"],"optimizationBailout":[],"depth":1,"source":"export function multiply (x, y) {\r\n    // Check that values have been supplied\r\n    if (typeof(x) !== \"number\" || typeof(y) !== \"number\") {\r\n        return \"Correct paramaters not defined, please supply two numbers\";\r\n    }\r\n    return x * y;\r\n}"},{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\modules\\Math\\math.mjs","name":"./build/assets/src/scripts/modules/Math/math.mjs","index":3,"index2":2,"size":381,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","issuerId":null,"issuerName":"./build/assets/src/scripts/scripts.js","issuerPath":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js"}],"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony side effect evaluation","userRequest":"./modules/Math/math.mjs","loc":"6:0-56"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/math.mjs","loc":"7:12-19"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/math.mjs","loc":"8:18-22"}],"usedExports":["MathAdd","Calc"],"providedExports":["Calc","MathAdd"],"optimizationBailout":[],"depth":1,"source":"export var Calc = function (start) {\r\n    var self = this;\r\n\r\n    this.add = function(x) {\r\n        start = start + x;\r\n        return start;\r\n    }\r\n\r\n    this.multiply = function(x) {\r\n        start = start * x;\r\n        return start;\r\n    }\r\n\r\n    this.equals = function() {\r\n        return start;\r\n    }\r\n}\r\n\r\nexport function MathAdd(x,y) {\r\n    return new Calc(x).add(y);\r\n}\r\n"}],"filteredModules":0}],"filteredModules":0,"origins":[{"module":"","moduleIdentifier":"","moduleName":"","loc":"scripts","request":"./build/assets/src/scripts/scripts.js","reasons":[]}]}],"modules":[{"id":0,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js d413a0f81e20b012cde400dc601ed7fd","name":"./build/assets/src/scripts/scripts.js + 3 modules","index":0,"index2":3,"size":2483,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"issuer":null,"issuerId":null,"issuerName":null,"issuerPath":null,"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":null,"module":null,"moduleName":null,"type":"single entry","userRequest":"./build/assets/src/scripts/scripts.js","loc":"scripts"}],"usedExports":true,"providedExports":[],"optimizationBailout":[],"depth":0,"modules":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js","index":0,"index2":3,"size":1500,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":null,"issuerId":null,"issuerName":null,"issuerPath":null,"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":null,"module":null,"moduleName":null,"type":"single entry","userRequest":"./build/assets/src/scripts/scripts.js","loc":"scripts"}],"usedExports":true,"providedExports":[],"optimizationBailout":["ModuleConcatenation bailout: Module is an entry point"],"depth":0,"source":"// Import basic module\nimport { add } from './modules/Math/add.mjs';\nimport { multiply } from './modules/Math/multiply.mjs';\nconsole.log(multiply(6, 4));\nconsole.log(add(5, 4, 3, 8));\nimport { MathAdd, Calc } from './modules/Math/math.mjs';\nconsole.log(MathAdd(3, 4));\nvar myCalc1 = new Calc(3);\nmyCalc1.add(5);\nconsole.log(myCalc1.equals());\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  document.querySelector(\"[data-js-theme-switch]\").onchange = themeSwitch;\n  document.querySelector(\"[data-js-slider-weight]\").oninput = rangeSliderWeight;\n  document.querySelector(\"[data-js-slider-italic]\").oninput = rangeSliderItalic;\n});\nvar bodyThemeClass = \"theme--dark\";\nvar fontVariationWeight = 300;\nvar fontVariationItalic = 0;\n\nfunction themeSwitch(event) {\n  if (event.target.checked) {\n    document.querySelector(\"body\").classList.add(\"theme--dark\");\n  } else {\n    document.querySelector(\"body\").classList.remove(\"theme--dark\");\n  }\n} // Range slider \n\n\nfunction rangeSliderWeight(event) {\n  fontVariationWeight = event.target.value;\n  setFontVariationSettings();\n}\n\nfunction rangeSliderItalic(event) {\n  fontVariationItalic = event.target.value;\n  setFontVariationSettings();\n}\n\nfunction setFontVariationSettings() {\n  var contentWrapper = document.querySelector(\"[data-js-content-wrapper]\");\n  contentWrapper.style.fontVariationSettings = \"'wght' \" + fontVariationWeight + \", 'ital' \" + fontVariationItalic;\n}\n/*\r\n    Idea for modules:\r\n    HSLA Colour picker\r\n\r\n    Math \r\n\r\n\r\n\r\n*/"},{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\modules\\Math\\add.mjs","name":"./build/assets/src/scripts/modules/Math/add.mjs","index":1,"index2":0,"size":357,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","issuerId":null,"issuerName":"./build/assets/src/scripts/scripts.js","issuerPath":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js"}],"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony side effect evaluation","userRequest":"./modules/Math/add.mjs","loc":"2:0-45"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/add.mjs","loc":"5:12-15"}],"usedExports":["add"],"providedExports":["add"],"optimizationBailout":[],"depth":1,"source":"const reducer = (accumulator, currentValue) => accumulator + currentValue; // This is the function done with the .reduce method on the array\r\n\r\n// Basic Maths module\r\nexport function add() {\r\n    // console.log(arguments);\r\n    var arr = Array.prototype.slice.call(arguments);\r\n    return arr.reduce(reducer, 5); // The 5 here is the initial value used\r\n}\r\n"},{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\modules\\Math\\multiply.mjs","name":"./build/assets/src/scripts/modules/Math/multiply.mjs","index":2,"index2":1,"size":245,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","issuerId":null,"issuerName":"./build/assets/src/scripts/scripts.js","issuerPath":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js"}],"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony side effect evaluation","userRequest":"./modules/Math/multiply.mjs","loc":"3:0-55"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/multiply.mjs","loc":"4:12-20"}],"usedExports":["multiply"],"providedExports":["multiply"],"optimizationBailout":[],"depth":1,"source":"export function multiply (x, y) {\r\n    // Check that values have been supplied\r\n    if (typeof(x) !== \"number\" || typeof(y) !== \"number\") {\r\n        return \"Correct paramaters not defined, please supply two numbers\";\r\n    }\r\n    return x * y;\r\n}"},{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\modules\\Math\\math.mjs","name":"./build/assets/src/scripts/modules/Math/math.mjs","index":3,"index2":2,"size":381,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"issuer":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","issuerId":null,"issuerName":"./build/assets/src/scripts/scripts.js","issuerPath":[{"id":null,"identifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","name":"./build/assets/src/scripts/scripts.js"}],"failed":false,"errors":0,"warnings":0,"assets":[],"reasons":[{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony side effect evaluation","userRequest":"./modules/Math/math.mjs","loc":"6:0-56"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/math.mjs","loc":"7:12-19"},{"moduleId":null,"moduleIdentifier":"D:\\Coding\\Git\\CSSPlayground\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding\\Git\\CSSPlayground\\build\\assets\\src\\scripts\\scripts.js","module":"./build/assets/src/scripts/scripts.js","moduleName":"./build/assets/src/scripts/scripts.js","type":"harmony import specifier","userRequest":"./modules/Math/math.mjs","loc":"8:18-22"}],"usedExports":["MathAdd","Calc"],"providedExports":["Calc","MathAdd"],"optimizationBailout":[],"depth":1,"source":"export var Calc = function (start) {\r\n    var self = this;\r\n\r\n    this.add = function(x) {\r\n        start = start + x;\r\n        return start;\r\n    }\r\n\r\n    this.multiply = function(x) {\r\n        start = start * x;\r\n        return start;\r\n    }\r\n\r\n    this.equals = function() {\r\n        return start;\r\n    }\r\n}\r\n\r\nexport function MathAdd(x,y) {\r\n    return new Calc(x).add(y);\r\n}\r\n"}],"filteredModules":0}],"filteredModules":0,"logging":{"webpack.buildChunkGraph.visitModules":{"entries":[],"filteredEntries":2,"debug":false}},"children":[]}